openapi: 3.0.3
info:
  title: Agent API
  version: 1.0.0
  description: REST API for sharing data between endpoints and controller.

paths:
  /endpoint:
    get:
      summary: List all module's endpoints
      tags:
        - Endpoint
      operationId: listEndpoints
      responses:
        '200':
          description: A list of endpoints.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Endpoint'
        '500':
          description: Internal Server Error
          
  /endpoint/push:
    post:
      summary: Push binary blob to a specified endpoint
      tags:
        - Endpoint
      operationId: pushBlobToEndpoint
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: ID of the endpoint to push the binary data to.
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Blob successfully pushed.
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /controller/push:
    post:
      summary: Push binary blob to the controller
      tags:
        - Controller
      operationId: pushBlobToController
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControllerPushRequest'
      responses:
        '200':
          description: Blob successfully pushed.
        '500':
          description: Internal Server Error

  /webhook:
    get:
      summary: List all registered webhooks
      tags:
        - Webhook
      operationId: listWebhooks
      responses:
        '200':
          description: A list of registered webhooks.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
        '500':
          description: Internal Server Error

    post:
      summary: Register a new webhook
      tags:
        - Webhook
      operationId: registerWebhook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookRegistrationRequest'
      responses:
        '201':
          description: Webhook registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookRegistrationResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

    delete:
      summary: Delete a registered webhook
      tags:
        - Webhook
      operationId: deleteWebhook
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: The ID of the webhook to delete.
      responses:
        '204':
          description: Webhook successfully deleted.
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

components:
  schemas:
    Endpoint:
      type: object
      properties:
        id:
          type: string

    Webhook:
      type: object
      properties:
        id:
          type: string
        urlPath:
          type: string
        event:
          type: string
          enum:
            - CONTROLLER_DATA
            - ENDPOINT_DATA

    WebhookRegistrationRequest:
      type: object
      properties:
        urlPath:
          type: string
        event:
          type: string
          enum:
            - CONTROLLER_DATA
            - ENDPOINT_DATA
    
    WebhookRegistrationResponse:
      type: object
      properties:
        ID:
          type: string
    
    ControllerPushRequest:
      type: object
      properties:
        receiverId:
          type: string
          description: ID of the receiver for the blob
        blob:
          type: string
          format: binary
          description: The binary data to be pushed, encoded as base64
      required:
        - receiverId
        - blob
    
    WebhookData:
      type: object
      properties:
        sourceEndpointID:
          type: string
          description: Endpoint ID of the sender
        blob:
          type: string
          format: binary
          description: Binary data encoded as base64
